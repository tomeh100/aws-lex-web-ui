{"version":3,"sources":["../src/website/chatbot-ui-iframe-loader.js"],"names":[],"mappings":"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","file":"chatbot-ui-iframe-loader.js","sourcesContent":["/*\n Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n Licensed under the Amazon Software License (the \"License\"). You may not use this file\n except in compliance with the License. A copy of the License is located at\n\n http://aws.amazon.com/asl/\n\n or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\"\n BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied. See the\n License for the specific language governing permissions and limitations under the License.\n */\n'use strict';\n\n/*\n * Sample JavaScript code to dynamically add bot iframe, AWS SDK,\n * load credentials and add related event handlers\n *\n * It uses a Cognito identity pool to illustrate passing credentials to the\n * chat bot\n */\n\n/* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n/* global AWS Promise */\n\n/**\n * CustomEvent polyfill for IE11\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\n */\n(function (window) {\n\n  if (typeof window.CustomEvent === 'function') {\n    return false;\n  }\n\n  function CustomEvent(event, params) {\n    // eslint-disable-next-line\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n   }\n\n  CustomEvent.prototype = window.Event.prototype;\n\n  window.CustomEvent = CustomEvent;\n})(window);\n\n/**\n * Class used to load the bot as an iframe\n */\nvar LexWebUiIframe = (function (document, window, defaultOptions) {\n  // default options - merged with options passed in the constructor\n  var OPTIONS = {\n    // div container class to insert iframe\n    containerClass: 'lex-web-ui',\n\n    // iframe source uri. use embed=true query string when loading as iframe\n    iframeSrcPath: '/index.html#/?lexWebUiEmbed=true',\n\n    // AWS SDK script dynamically added to the DOM\n    // https://github.com/aws/aws-sdk-js\n    sdkUrl: 'https://sdk.amazonaws.com/js/aws-sdk-2.149.0.min.js',\n\n    // controls whether the AWS SDK is dynamically added to the DOM\n    shouldAddAwsSdk: true,\n\n    // URL to download config JSON file\n    configUrl: '/chatbot-ui-iframe-loader-config.json',\n\n    // controls whether the config should be downloaded from `configUrl`\n    shouldLoadConfigFromJsonFile: true,\n\n    // controls whether the config should be obtained using events\n    shouldLoadConfigFromEvent: true,\n\n    // controls whether the bot loader script should\n    // automatically initialize and load the iframe.\n    // If set to false, you should manually initialize\n    // using the init() method\n    shouldAutoLoad: true,\n  };\n\n  /*\n  The config field is initialized from the contents of OPTIONS.configUrl.\n  At minimum, it should contain the following keys (see the README for details):\n    # origin contains proto://host:port\n    # port needed if not default 80 for htt or 443 for https\n    iframeOrigin\n\n    # AWS config\n    aws:\n      # AWS Region\n      region:\n\n      # Cognito Pool Id\n      cognitoPoolId:\n  */\n\n  // class used by this script\n  function BotLoader(optionsParam) {\n    this.options = Object.assign({}, OPTIONS, defaultOptions, optionsParam);\n    this.config = {\n      iframeOrigin: '',\n      loadIframeMinimized: true,\n      aws: {\n        cognitoPoolId: ''\n      },\n      iframeConfig: {\n        lex: { botName: '' }\n      }\n    };\n    this.iframeElement = null;\n    this.containerElement = null;\n    this.credentials = null;\n    this.isChatBotReady = false;\n  }\n\n  /**\n   * Class attribute that controls whether the bot loader script should\n   * automatically load the iframe\n   */\n  BotLoader.shouldAutoLoad = true;\n\n  /**\n   * Initializes the chatbot ui. This should be called when the DOM has\n   * finished loading\n   */\n  BotLoader.prototype.init = function (configParam) {\n    var self = this;\n\n    Promise.resolve()\n    .then(function initConfig() {\n      return Promise.resolve()\n        .then(function initConfigFromJsonFile() {\n          return (self.options.shouldLoadConfigFromJsonFile) ?\n            loadConfigFromJsonFile(self.options.configUrl) :\n            Promise.resolve(self.config);\n        })\n        .then(function initConfigFromEvent(config) {\n          return (self.options.shouldLoadConfigFromEvent) ?\n            loadConfigFromEvent(config) :\n            Promise.resolve(config);\n        })\n        .then(function assignConfig(config) {\n          // merge config passed as an argument to init()\n          var configFromInit = (configParam && Object.keys(configParam).length) ?\n            mergeConfig(self.config, configParam) : self.config;\n          var mergedConfig = (config && Object.keys(config).length) ?\n            mergeConfig(configFromInit, config) : configFromInit;\n          if (!('iframeOrigin' in mergedConfig) || !mergedConfig.iframeOrigin) {\n            mergedConfig.iframeOrigin = window.location.origin;\n          }\n          if (!validateConfig(mergedConfig)) {\n            return Promise.reject('config object is missing required fields');\n          }\n          self.config = mergedConfig;\n          return Promise.resolve(self.config);\n        });\n    })\n    .then(function initContainer() {\n      return addContainer(self.options.containerClass)\n        .then(function assignContainer(containerElement) {\n          self.containerElement = containerElement;\n          return containerElement;\n        });\n    })\n    .then(function initSdk() {\n      return (self.options.shouldAddAwsSdk) ?\n        addAwsSdk(\n          self.containerElement,\n          self.options.containerClass,\n          self.options.sdkUrl\n        ) :\n        Promise.resolve();\n    })\n    .then(function initCredentials() {\n      return createCredentials(\n        self.config.aws.region || 'us-east-1',\n        self.config.aws.cognitoPoolId\n      )\n        .then(function assignCredentials(credentials) {\n          self.credentials = credentials;\n        });\n    })\n    .then(function addMessageFromIframeListener() {\n      window.addEventListener(\n        'message',\n        self.onMessageFromIframe.bind(self),\n        false\n      );\n    })\n    .then(function initIframe() {\n      if (!self.config.iframeOrigin || !self.containerElement) {\n        return Promise.reject('missing fields when initializing iframe');\n      }\n      return addIframe(\n        self.config.iframeOrigin,\n        self.containerElement,\n        self.options.containerClass,\n        self.options.iframeSrcPath\n      )\n        .then(function assignIframe(iframeElement) {\n          self.iframeElement = iframeElement;\n        })\n        .then(function waitForChatBot() {\n          return self.waitForChatBotReady();\n        });\n    })\n    .then(function displayIframe() {\n      return Promise.resolve()\n        .then(function minimizeUi() {\n          return (self.config.loadIframeMinimized) ?\n            self.sendMessageToIframe({ event: 'toggleMinimizeUi' }) :\n            Promise.resolve();\n        })\n        .then(function showUi() {\n          toggleShowUi(self.containerElement, self.options.containerClass);\n        });\n    })\n    .then(function setupEvents() {\n      return Promise.resolve()\n        .then(function addParentToIframeListener() {\n          document.addEventListener(\n            'lexWebUiMessage',\n            self.onMessageToIframe.bind(self),\n            false\n          );\n        })\n        .then(function sendReadyMessageToIframe() {\n          return self.sendMessageToIframe({ event: 'parentReady' });\n        })\n        .then(function sendReadyMessageToParent() {\n          var event = new CustomEvent('lexWebUiReady');\n          document.dispatchEvent(event);\n        });\n\n    })\n    .catch(function initError(error) {\n      console.error('could not initialize chat bot -', error);\n    });\n  };\n\n  /**************************************************************************\n   * Init functions - the functions in this section are helpers used by the\n   * BotLoader init() method.\n  **************************************************************************/\n\n  /**\n   * Loads the bot config from a JSON file URL\n   */\n  function loadConfigFromJsonFile(url) {\n    return new Promise(function loadConfigFromJsonFilePromise(resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url);\n      xhr.responseType = 'json';\n      xhr.onerror = function configOnError() {\n        reject('error getting chat bot config from url: ' + url);\n      };\n      xhr.onload = function configOnLoad() {\n        if (xhr.status == 200) {\n          // ie11 does not support responseType\n          if (typeof xhr.response === 'string') {\n            try {\n              var parsedResponse = JSON.parse(xhr.response);\n              return resolve(parsedResponse);\n            } catch (err) {\n              return reject('unable to decode chat bot config object');\n            }\n          }\n          return resolve(xhr.response);\n        } else {\n          return reject('failed to get chat bot config with status: ' + xhr.status);\n        }\n      };\n      xhr.send();\n    });\n  }\n\n  /**\n   * Loads dynamic bot config from an event\n   * Merges it with the config passed as parameter\n   */\n  function loadConfigFromEvent(conf) {\n    return new Promise(function waitForConfigEvent(resolve, reject) {\n      var timeoutInMs = conf.configEventTimeOutInMs || 10000;\n\n      var timeoutId = setTimeout(onConfigEventTimeout, timeoutInMs);\n      document.addEventListener('loadlexconfig', onConfigEventLoaded, false);\n\n      var intervalId = setInterval(emitReceiveEvent, 500);\n      // signal that we are ready to receive the dynamic config\n      function emitReceiveEvent() {\n        var event = new CustomEvent('receivelexconfig');\n        document.dispatchEvent(event);\n      }\n\n      function onConfigEventLoaded(evt) {\n        clearTimeout(timeoutId);\n        clearInterval(intervalId);\n        document.removeEventListener('loadlexconfig', onConfigEventLoaded, false);\n\n        if (evt && ('detail' in evt) && evt.detail && ('config' in evt.detail)) {\n          var evtConfig = evt.detail.config;\n          var mergedConfig = mergeConfig(conf, evtConfig);\n          return resolve(mergedConfig);\n        } else {\n          return reject('malformed config event: ' + JSON.stringify(evt));\n        }\n      }\n\n      function onConfigEventTimeout() {\n        clearInterval(intervalId);\n        document.removeEventListener('loadlexconfig', onConfigEventLoaded, false);\n        return reject('config event timed out');\n      }\n    });\n  }\n\n  /**\n   * Merges config objects. The initial set of keys to merge are driven by\n   * the baseConfig. The srcConfig values override the baseConfig ones\n   * unless the srcConfig value is empty\n   */\n  function mergeConfig(baseConfig, srcConfig) {\n    function isEmpty(data) {\n      if (typeof data === 'number' || typeof data === 'boolean') {\n        return false;\n      }\n      if (typeof data === 'undefined' || data === null) {\n        return true;\n      }\n      if (typeof data.length !== 'undefined') {\n        return data.length === 0;\n      }\n      return Object.keys(data).length === 0;\n    }\n\n    // use the baseConfig first level keys as the base for merging\n    return Object.keys(baseConfig)\n      .map(function (key) {\n        var mergedConfig = {};\n        var value = baseConfig[key];\n        // merge from source if its value is not empty\n        if (key in srcConfig && !isEmpty(srcConfig[key])) {\n          value = (typeof baseConfig[key] === 'object') ?\n            // recursively merge sub-objects in both directions\n            Object.assign(\n              mergeConfig(srcConfig[key], baseConfig[key]),\n              mergeConfig(baseConfig[key], srcConfig[key])\n            ) :\n            srcConfig[key];\n        }\n        mergedConfig[key] = value;\n        return mergedConfig;\n      })\n      .reduce(function (merged, configItem) {\n          return Object.assign({}, merged, configItem);\n        },\n        {}\n      );\n  }\n\n  /**\n   * Validate that the config has the expected structure\n   */\n  function validateConfig(config) {\n    if (!('iframeOrigin' in config && config.iframeOrigin)) {\n      console.error('missing iframeOrigin config field');\n      return false;\n    }\n    if (!('aws' in config && config.aws)) {\n      console.error('missing aws config field');\n      return false;\n    }\n    if (!('cognitoPoolId' in config.aws && config.aws.cognitoPoolId)) {\n      console.error('missing cognitoPoolId config field');\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Adds a div container to document body which will hold the chat bot iframe\n   * and AWS SDK script\n   */\n  function addContainer(containerClass) {\n    if (!containerClass) {\n      return Promise.reject('invalid chat bot container class: ' + containerClass);\n    }\n    var divElement = document.querySelector('.' + containerClass);\n    if (divElement) {\n      return Promise.resolve(divElement);\n    }\n    divElement = document.createElement('div');\n    divElement.classList.add(containerClass);\n    document.body.appendChild(divElement);\n\n    return Promise.resolve(divElement);\n  }\n\n  /**\n   * Adds a script tag to dynamically load the AWS SDK under the application\n   * div container. Avoids loading the SDK if the AWS SDK seems to be loaded\n   * or the tag exists\n   */\n  function addAwsSdk(divElement, containerClass, sdkUrl) {\n    return new Promise(function addAwsSdkPromise(resolve, reject) {\n      if (!divElement || !divElement.appendChild) {\n        reject('invalid node element in add sdk');\n      }\n      var sdkScriptElement =\n        document.querySelector('.' + containerClass + ' script');\n      if (sdkScriptElement || 'AWS' in window) {\n        resolve(sdkScriptElement);\n      }\n\n      sdkScriptElement = document.createElement('script');\n      sdkScriptElement.setAttribute('type', 'text/javascript');\n\n      sdkScriptElement.onerror = function sdkOnError() {\n        reject('failed to load AWS SDK link:' + sdkUrl);\n      };\n      sdkScriptElement.onload = function sdkOnLoad() {\n        resolve(sdkScriptElement);\n      };\n\n      sdkScriptElement.setAttribute('src', sdkUrl);\n\n      divElement.appendChild(sdkScriptElement);\n    });\n  }\n\n  /**\n   * Initializes credentials\n   */\n  function createCredentials(region, cognitoPoolId) {\n    if (!('AWS' in window) ||\n      !('CognitoIdentityCredentials' in window.AWS)\n    ) {\n      return Promise.reject('unable to find AWS SDK object');\n    }\n\n    var credentials = new AWS.CognitoIdentityCredentials(\n      { IdentityPoolId: cognitoPoolId },\n      { region: region }\n    );\n\n    return credentials.getPromise()\n      .then(function () {\n        return credentials;\n      });\n  }\n\n  /**\n   * Adds chat bot iframe under the application div container\n   */\n  function addIframe(origin, divElement, containerClass, iframeSrcPath) {\n    var iframeElement =\n      document.querySelector('.' + containerClass + ' iframe');\n    if (iframeElement) {\n      return Promise.resolve(iframeElement);\n    }\n    if (!('appendChild' in divElement)) {\n      return Promise.reject('invalid node element to append iframe');\n    }\n\n    iframeElement = document.createElement('iframe');\n    iframeElement.setAttribute('src', origin + iframeSrcPath);\n    iframeElement.setAttribute('frameBorder', '0');\n    iframeElement.setAttribute('scrolling', 'no');\n    iframeElement.setAttribute('title', 'chatbot');\n    // chrome requires this feature policy when using the\n    // mic in an cross-origin iframe\n    iframeElement.setAttribute('allow', 'microphone');\n\n    divElement.appendChild(iframeElement);\n\n    return new Promise(function loadIframePromise(resolve, reject) {\n      var timeoutInMs = 20000; // bail out on loading after this timeout\n      var timeoutId = setTimeout(onIframeTimeout, timeoutInMs);\n      iframeElement.addEventListener('load', onIframeLoaded, false);\n\n      function onIframeLoaded() {\n        clearTimeout(timeoutId);\n        iframeElement.removeEventListener('load', onIframeLoaded, false);\n\n        return resolve(iframeElement);\n      }\n\n      function onIframeTimeout() {\n        iframeElement.removeEventListener('load', onIframeLoaded, false);\n        return reject('iframe load timeout');\n      }\n    });\n  }\n\n  /**************************************************************************\n   * iframe UI helpers\n  **************************************************************************/\n\n  /**\n   * Toggle between showing/hiding chatbot ui\n   */\n  function toggleShowUi(containerElement, containerClass) {\n    containerElement.classList.toggle(\n      containerClass + '--show'\n    );\n  }\n\n  /**\n   * Toggle between miminizing and expanding the chatbot ui\n   */\n  function toggleMinimizeUi(containerElement, containerClass) {\n    containerElement.classList.toggle(\n      containerClass + '--minimize'\n    );\n  }\n\n  /**************************************************************************\n   * BotLoader Methods\n  **************************************************************************/\n\n  /**\n   * Wait for the chatbot UI to send the 'ready' message indicating\n   * that it has successfully initialized\n   */\n  BotLoader.prototype.waitForChatBotReady = function () {\n    var self = this;\n    return new Promise(function waitForReady(resolve, reject) {\n      var timeoutInMs = 15000;\n      var timeoutId = setTimeout(onConfigEventTimeout, timeoutInMs);\n      var intervalId = setInterval(checkIsChatBotReady, 500);\n\n      function checkIsChatBotReady() {\n        if (self.isChatBotReady) {\n          clearTimeout(timeoutId);\n          clearInterval(intervalId);\n          return resolve();\n        }\n      }\n\n      function onConfigEventTimeout() {\n        clearInterval(intervalId);\n        return reject('chatbot loading time out');\n      }\n    });\n  }\n\n  /**\n   * Get AWS credentials to pass to the chatbot UI\n   */\n  BotLoader.prototype.getCredentials = function () {\n    var self = this;\n\n    if (!self.credentials || !('getPromise' in self.credentials)) {\n      console.error('getPromise not found in credentials');\n      return Promise.reject('getPromise not found in credentials');\n    }\n\n    return self.credentials.getPromise()\n      .then(function storeIdentityId() {\n        localStorage.setItem('cognitoid', self.credentials.identityId);\n      })\n      .then(function getCredentialsPromise() {\n        return self.credentials;\n      });\n  }\n\n  /**\n   * Send a message to the iframe using postMessage\n   */\n  BotLoader.prototype.sendMessageToIframe = function (message) {\n    var self = this;\n    if (!self.iframeElement ||\n      !('contentWindow' in self.iframeElement) ||\n      !('postMessage' in self.iframeElement.contentWindow)\n    ) {\n      return Promise.reject('invalid iframe element');\n    }\n\n    return new Promise(function sendMessageToIframePromise(resolve, reject) {\n      var messageChannel = new MessageChannel();\n      messageChannel.port1.onmessage =\n        function sendMessageToIframeResolver(evt) {\n          messageChannel.port1.close();\n          messageChannel.port2.close();\n          if (evt.data.event === 'resolve') {\n            resolve(evt.data);\n          } else {\n            reject('iframe failed to handle message - ' + evt.data.error);\n          }\n        };\n      self.iframeElement.contentWindow.postMessage(message,\n        self.config.iframeOrigin, [messageChannel.port2]);\n    });\n  };\n\n  BotLoader.prototype.onMessageToIframe = function (evt) {\n    var self = this;\n\n    if (!evt || !('detail' in evt) || !evt.detail ||\n      !('message' in evt.detail)\n    ) {\n      console.error(\n        'malformed message to iframe event: ' + JSON.stringify(evt)\n      );\n      return;\n    }\n    return self.sendMessageToIframe(evt.detail.message);\n  };\n\n  /**\n   * Message handler - receives postMessage events from iframe\n   */\n  BotLoader.prototype.onMessageFromIframe = function (evt) {\n    var self = this;\n    var messageHandler = self.createIframeMessageHandlers();\n    // security check\n    if (evt.origin !== self.config.iframeOrigin) {\n      console.warn('postMessage from invalid origin', evt.origin);\n      return;\n    }\n    if (!evt.ports) {\n      console.error('postMessage not sent over MessageChannel', evt);\n      return;\n    }\n\n    // TODO convert events and handlers to a reducer\n    switch (evt.data.event) {\n      case 'ready':\n        messageHandler.onReady(evt);\n        break;\n      case 'getCredentials':\n        messageHandler.onGetCredentials(evt);\n        break;\n      case 'initIframeConfig':\n        messageHandler.onInitIframeConfig(evt);\n        break;\n      case 'toggleMinimizeUi':\n        messageHandler.onToggleMinimizeUi(evt);\n        break;\n      case 'updateLexState':\n        messageHandler.onUpdateLexState(evt);\n        break;\n      default:\n        console.error('unknown message in event', evt);\n        break;\n    }\n  };\n\n  /**\n   * Creates an object containing the message handler functions\n   * used by onMessageFromIframe\n   */\n  BotLoader.prototype.createIframeMessageHandlers = function () {\n    var self = this;\n\n    return {\n      onReady: function onReady(evt) {\n        self.isChatBotReady = true;\n        evt.ports[0].postMessage({ event: 'resolve', type: evt.data.event });\n      },\n      onGetCredentials: function onGetCredentials(evt) {\n        return self.getCredentials()\n          .then(function resolveGetCredentials(creds) {\n            evt.ports[0].postMessage({\n              event: 'resolve',\n              type: evt.data.event,\n              data: creds,\n            });\n          })\n          .catch(function onGetCredentialsError(error) {\n            console.error('failed to get credentials', error);\n            evt.ports[0].postMessage({\n              event: 'reject',\n              type: evt.data.event,\n              error: 'failed to get credentials',\n            });\n          });\n      },\n      onInitIframeConfig: function onInitIframeConfig(evt) {\n        var iframeConfig = self.config.iframeConfig;\n        try {\n          iframeConfig.cognito = {\n            poolId: self.config.aws.cognitoPoolId,\n          };\n          iframeConfig.region = self.config.aws.region;\n          // place dynamic initialization logic in here\n        } catch (e) {\n          evt.ports[0].postMessage({\n            event: 'reject',\n            type: evt.data.event,\n            error: 'failed to obtain a valid iframe config',\n          });\n          console.error('failed to assign iframe config', e);\n          return;\n        }\n        evt.ports[0].postMessage({\n          event: 'resolve',\n          type: evt.data.event,\n          data: iframeConfig,\n        });\n      },\n      onToggleMinimizeUi: function onToggleMinimizeUi(evt) {\n        toggleMinimizeUi(self.containerElement, self.options.containerClass);\n        evt.ports[0].postMessage({ event: 'resolve', type: evt.data.event });\n      },\n      onUpdateLexState: function onUpdateLexState(evt) {\n        // evt.data will contain the Lex state\n        // send resolve ressponse to the chatbot ui\n        evt.ports[0].postMessage({ event: 'resolve', type: evt.data.event });\n\n        // relay event to parent\n        var event = new CustomEvent('updatelexstate', { 'detail': evt.data });\n        document.dispatchEvent(event);\n      },\n    };\n  };\n\n  return BotLoader;\n})(\n  document,\n  window,\n  // options to override defaults passed in an existing LexWebUi.options var\n  (LexWebUiIframe && LexWebUiIframe.options) ? LexWebUiIframe.options : null\n);\n\n/**\n * Instantiates the bot loader\n*/\n// eslint-disable-next-line no-unused-vars\nvar lexWebUi = (function (document, window, BotLoader) {\n  /**\n   * Check if modern browser features used by chat bot are supported\n   */\n  function isSupported() {\n    var features = [\n      'Audio',\n      'Blob',\n      'MessageChannel',\n      'Promise',\n      'URL',\n      'localStorage',\n      'postMessage',\n    ];\n    return features.every(function (feature) {\n      return feature in window;\n    });\n  }\n\n  var botLoader = new BotLoader();\n\n  if (!botLoader.options.shouldAutoLoad) {\n    return botLoader;\n  }\n\n  if (isSupported()) {\n    // initialize iframe once the DOM is loaded\n    document.addEventListener(\n      'DOMContentLoaded',\n      function initBoloader() {\n        botLoader.init();\n      }.bind(this),\n      false\n    );\n    return botLoader;\n  } else {\n    console.warn(\n      'chatbot UI could not be be loaded - ' +\n      'could not find require browser functions'\n    );\n  }\n})(document, window, LexWebUiIframe);\n"]}